from typing import List

from app.bot.messages import interface_controller
from app.bot.messages.telegram import _get_message_text
from app.bot.messages.vkontakte.keyboards import *


@interface_controller.register_modifiable_object(
    title="–°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", platform="vk"
)
async def get_start_message(user_id: int, modifiable=None) -> Message:
    default_message = (
        "–ü—Ä–∏–≤–µ—Ç, —è - —á–∞—Ç-–±–æ—Ç –ë—É—Ä–≥–µ—Ä –ö–∏–Ω–≥! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –Ω–∞–π—Ç–∏ –±–ª–∏–∂–∞–π—à–∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω, –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –º–µ–Ω—é –∏ "
        "—Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑.\n–ß—Ç–æ –∂–µ —Ç—ã –∂–¥—ë—à—å? –í–æ—Å–ø–æ–ª—å–∑—É–π—Å—è —Å–∫–æ—Ä–µ–µ –∫–Ω–æ–ø–∫–∞–º–∏ –≤ –º–æ—ë–º –º–µ–Ω—é ‚¨áÔ∏è"
    )
    msg = Message(
        user_id=user_id,
        message=_get_message_text(modifiable, default_message),
    )
    msg.keyboard = await get_main_keyboard()
    return msg


@interface_controller.register_modifiable_object(
    title="–î–µ—Ñ–æ–ª—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", platform="vk"
)
async def get_default_message(user_id: int, modifiable=None) -> Message:
    default_message = "–Ø –±—ã —Ä–∞–¥ –≤–∞–º –ø–æ–º–æ—á—å, –Ω–æ –ø–æ–∫–∞ –Ω–µ –ø–æ–Ω–∏–º–∞—é —Ç–∞–∫–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è :(\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é ‚¨áÔ∏è"
    msg = Message(
        user_id=user_id, message=_get_message_text(modifiable, default_message)
    )
    msg.keyboard = await get_main_keyboard()
    return msg


@interface_controller.register_modifiable_object(
    title="–°–æ–æ–±—â–µ–Ω–∏–µ –æ –≤–æ–∑–≤—Ä–∞—Ç–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ", platform="vk"
)
async def get_back_to_main_menu_message(user_id: int, modifiable=None) -> Message:
    msg = Message(
        user_id=user_id,
        message=_get_message_text(modifiable, "–í–æ–∑–≤—Ä–∞—â–∞—é—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"),
    )
    msg.keyboard = await get_main_keyboard()
    return msg


@interface_controller.register_modifiable_object(
    title="–°–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ —Å—Ü–µ–Ω–∞—Ä–∏—è –ø–æ–∏—Å–∫–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤", platform="vk"
)
async def get_find_restaurant_message(user_id: int, modifiable=None) -> Message:
    msg = Message(
        user_id=user_id,
        message=_get_message_text(
            modifiable, "–í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π –≤–∞–º —Å–ø–æ—Å–æ–± –ø–æ–∏—Å–∫–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞))"
        ),
    )
    msg.keyboard = await get_find_restaurant_keyboard()
    return msg


@interface_controller.register_modifiable_object(
    title="–°–æ–æ–±—â–µ–Ω–∏–µ –æ –≤—ã–±–æ—Ä–µ –∂–µ–ª–∞–µ–º–æ–π –∫—É—Ö–Ω–∏", platform="vk"
)
async def get_choose_type_of_food_message(
    user_id: int, food_filters_state: List, modifiable=None
) -> Message:
    msg = Message(
        user_id=user_id,
        message=_get_message_text(
            modifiable,
            "–ë–ª—é–¥–∞ –∫–∞–∫–æ–π –∫—É—Ö–Ω–∏ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç —Å–µ–≥–æ–¥–Ω—è? (–ï—Å–ª–∏ –≤–∞—Å –Ω–µ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç —á—Ç–æ-—Ç–æ –æ—Å–æ–±–µ–Ω–Ω–æ–µ –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å—Ç–æ "
            "–Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É '–î–∞–ª–µ–µ')",
        ),
    )
    msg.keyboard = await get_choose_type_of_parameter_in_restaurant_keyboard(
        parameter_filters_state=food_filters_state
    )
    return msg


@interface_controller.register_modifiable_object(
    title="–°–æ–æ–±—â–µ–Ω–∏–µ –æ –≤—ã–±–æ—Ä–µ —Ç–∏–ø–∞ –∏—Å–∫–æ–º–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è", platform="vk"
)
async def get_choose_type_of_restaurant_message(
    user_id: int, restaurant_filters_state: List, modifiable=None
) -> Message:
    msg = Message(
        user_id=user_id,
        message=_get_message_text(
            modifiable,
            "–ó–∞–≤–µ–¥–µ–Ω–∏–µ –∫–∞–∫–æ–≥–æ —Ç–∏–ø–∞ –≤—ã –∏—â–µ—Ç–µ?",
        ),
    )
    msg.keyboard = await get_choose_type_of_parameter_in_restaurant_keyboard(
        parameter_filters_state=restaurant_filters_state
    )
    return msg


@interface_controller.register_modifiable_object(
    title="–°–æ–æ–±—â–µ–Ω–∏–µ –æ –≤—ã–±–æ—Ä–µ —Ç–∏–ø–∞ –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏ (–∑–∞–≤—Ç—Ä–∞–∫, –æ–±–µ–¥, —É–∂–∏–Ω....)", platform="vk"
)
async def get_choose_type_of_meal_message(
    user_id: int, meal_filters_state: List, modifiable=None
) -> Message:
    msg = Message(
        user_id=user_id,
        message=_get_message_text(
            modifiable,
            "–•–æ—Ç–∏—Ç–µ –ø–æ–∑–∞–≤—Ç—Ä–∞–∫–∞—Ç—å/–ø–æ–æ–±–µ–¥–∞—Ç—å/–ø–æ—É–∂–∏–Ω–∞—Ç—å –≤ –∑–∞–≤–µ–¥–µ–Ω–∏–∏?",
        ),
    )
    msg.keyboard = await get_choose_type_of_parameter_in_restaurant_keyboard(
        parameter_filters_state=meal_filters_state
    )
    return msg


@interface_controller.register_modifiable_object(
    title="–°–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–º, —á—Ç–æ —Ñ–∏–ª—å—Ç—Ä –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω –≤ —Ä–µ–∂–∏–º –≤—ã–∫–ª.",
    platform="vk",
)
async def get_positive_filters_state_message(
    user_id: int, filters_name: str, modifiable=None
):
    default_msg_text = f'–û–∫–µ–π, —Ñ–∏–ª—å—Ç—Ä "{filters_name}" –≤–∫–ª—é—á–µ–Ω.'
    return Message(
        user_id=user_id,
        message=_get_message_text(modifiable, default_msg_text),
    )


@interface_controller.register_modifiable_object(
    title="–°–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–º, —á—Ç–æ —Ñ–∏–ª—å—Ç—Ä –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω –≤ —Ä–µ–∂–∏–º –≤–∫–ª.",
    platform="vk",
)
async def get_negative_filters_state_message(
    user_id: int, filters_name: str, modifiable=None
):
    default_msg_text = f'–û–∫–µ–π,  —Ñ–∏–ª—å—Ç—Ä "{filters_name}" –≤—ã–∫–ª—é—á–µ–Ω.'
    return Message(
        user_id=user_id,
        message=_get_message_text(modifiable, default_msg_text),
    )


def get_restaurant_info_message_text(restaurant):
    text = (
        f"*{restaurant.get('name')}*\n{restaurant.get('description')}\n\n–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞: {restaurant.get('mean_prices')}"
        f"\n–†–∞–π–æ–Ω: _{restaurant.get('neighborhood')}_ {restaurant.get('address')}\n–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {restaurant.get('time')}\n"
        f"–°–∞–π—Ç: {restaurant.get('links')}"
    )
    return text


@interface_controller.register_modifiable_object(
    title="–°–æ–æ–±—â–µ–Ω–∏–µ –æ –≤—ã–±–æ—Ä–µ –æ–ø—Ü–∏–∏ –ø–æ–∏—Å–∫–∞ –ø–æ –ª–æ–∫–∞—Ü–∏–∏", platform="vk"
)
async def get_find_restaurant_by_location_message(
    user_id: int, modifiable=None
) -> Message:
    msg = Message(
        user_id=user_id,
        message=_get_message_text(
            modifiable,
            "–ü–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é, –≤—ã–±–µ—Ä–∏—Ç–µ, —Ö–æ—Ç–∏—Ç–µ –ª–∏ –≤—ã –∏—Å–∫–∞—Ç—å —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã —Ä—è–¥–æ–º —Å —Å–æ–±–æ–π –∏–ª–∏ –∂–µ –≤ —Å–≤–æ–µ–º —Ä–∞–π–æ–Ω–µ?",
        ),
    )
    msg.keyboard = await get_find_restaurant_by_location_keyboard()
    return msg


@interface_controller.register_modifiable_object(
    title="–°–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–ø—Ä–æ—Å–æ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é",
    platform="vk",
)
async def get_request_location_message(user_id: int, modifiable=None):
    default_msg_text = "–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–≤–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ üìç"
    return Message(
        user_id=user_id,
        message=_get_message_text(modifiable, default_msg_text),
    )
